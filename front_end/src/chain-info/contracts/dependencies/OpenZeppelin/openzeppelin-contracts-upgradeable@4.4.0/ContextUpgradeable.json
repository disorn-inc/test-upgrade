{
  "abi": [],
  "allSourcePaths": {
    "1": "/home/disorn/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.4.0/contracts/proxy/utils/Initializable.sol",
    "2": "/home/disorn/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.4.0/contracts/utils/ContextUpgradeable.sol"
  },
  "ast": {
    "absolutePath": "/home/disorn/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.4.0/contracts/utils/ContextUpgradeable.sol",
    "exportedSymbols": {
      "ContextUpgradeable": [
        884
      ],
      "Initializable": [
        716
      ]
    },
    "id": 885,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 842,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "86:23:2"
      },
      {
        "absolutePath": "/home/disorn/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.4.0/contracts/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "id": 843,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 885,
        "sourceUnit": 717,
        "src": "110:42:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 845,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 716,
              "src": "691:13:2"
            },
            "id": 846,
            "nodeType": "InheritanceSpecifier",
            "src": "691:13:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 844,
          "nodeType": "StructuredDocumentation",
          "src": "154:496:2",
          "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
        },
        "fullyImplemented": true,
        "id": 884,
        "linearizedBaseContracts": [
          884,
          716
        ],
        "name": "ContextUpgradeable",
        "nameLocation": "669:18:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 854,
              "nodeType": "Block",
              "src": "758:43:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 851,
                      "name": "__Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 861,
                      "src": "768:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "768:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 853,
                  "nodeType": "ExpressionStatement",
                  "src": "768:26:2"
                }
              ]
            },
            "id": 855,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 849,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 848,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 715,
                  "src": "746:11:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "746:11:2"
              }
            ],
            "name": "__Context_init",
            "nameLocation": "720:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "734:2:2"
            },
            "returnParameters": {
              "id": 850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "758:0:2"
            },
            "scope": 884,
            "src": "711:90:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 860,
              "nodeType": "Block",
              "src": "864:7:2",
              "statements": []
            },
            "id": 861,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 858,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 857,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 715,
                  "src": "852:11:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "852:11:2"
              }
            ],
            "name": "__Context_init_unchained",
            "nameLocation": "816:24:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "840:2:2"
            },
            "returnParameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "864:0:2"
            },
            "scope": 884,
            "src": "807:64:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 869,
              "nodeType": "Block",
              "src": "938:34:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 866,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "955:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "955:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 865,
                  "id": 868,
                  "nodeType": "Return",
                  "src": "948:17:2"
                }
              ]
            },
            "id": 870,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "885:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:2:2"
            },
            "returnParameters": {
              "id": 865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 864,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 870,
                  "src": "929:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "928:9:2"
            },
            "scope": 884,
            "src": "876:96:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 878,
              "nodeType": "Block",
              "src": "1045:32:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 875,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "1062:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "1062:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 874,
                  "id": 877,
                  "nodeType": "Return",
                  "src": "1055:15:2"
                }
              ]
            },
            "id": 879,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "987:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "995:2:2"
            },
            "returnParameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 873,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 879,
                  "src": "1029:14:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1028:16:2"
            },
            "scope": 884,
            "src": "978:99:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 883,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1102:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 884,
            "src": "1082:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 880,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1082:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 882,
              "length": {
                "hexValue": "3530",
                "id": 881,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1090:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1082:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 885,
        "src": "651:459:2",
        "usedErrors": []
      }
    ],
    "src": "86:1025:2"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "ContextUpgradeable",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.4.0/Initializable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    651,
    1110
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "94a97207d49f6e0ec24cabd0253624f60c83d36c",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal initializer {\n        __Context_init_unchained();\n    }\n\n    function __Context_init_unchained() internal initializer {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n    uint256[50] private __gap;\n}\n",
  "sourceMap": "",
  "sourcePath": "/home/disorn/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.4.0/contracts/utils/ContextUpgradeable.sol",
  "type": "contract"
}